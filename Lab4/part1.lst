     1                                  extern printf
     2                                  global main
     3                                  
     4                                  %define array1_size 25
     5                                  %define array1_bytes 2
     6                                  %define NULL 0
     7                                  %define NL 10
     8                                  %define EXIT_SUCCESS 0
     9                                  
    10                                  
    11                                  section .bss
    12 00000000 <res 32h>                   array1: resw array1_size
    13                                  
    14                                  section .data
    15 00000000 00000000                    index_val dd 0
    16 00000004 417272617920496E64-         fmt1: db "Array Index: %2d Value: %2d", NL, NULL
    16 0000000D 65783A202532642056-
    16 00000016 616C75653A20253264-
    16 0000001F 0A00               
    17 00000021 4541583A202532640A-         fmt2: db "EAX: %2d", NL, NULL
    17 0000002A 00                 
    18                                      
    19                                  
    20                                  section .rodata
    21                                  
    22                                  section .text
    23                                  
    24                                  main:
    25 00000000 55                          push ebp
    26 00000001 89E5                        mov ebp, esp
    27                                  
    28 00000003 BB[00000000]                mov ebx, array1
    29 00000008 BF00000000                  mov edi, 0  
    30 0000000D B807000000                  mov eax, 7
    31                                  
    32                                      assign:
    33 00000012 89047B                      mov [ebx+edi * 2], eax 
    34                                  
    35 00000015 83C701                      add edi, 1
    36 00000018 83C007                      add eax, 7
    37                                  
    38 0000001B 83FF19                      cmp edi, array1_size
    39 0000001E 7CF2                        jl assign
    40                                  
    41 00000020 BF00000000                  mov edi, 0
    42 00000025 BB[00000000]                mov ebx, array1
    43                                  
    44                                      print: 
    45 0000002A B800000000                  mov eax, 0
    46 0000002F 668B047B                    mov ax, [ebx+edi * 2]
    47 00000033 50                          push eax
    48 00000034 57                          push edi
    49                                  
    50 00000035 68[04000000]                push dword fmt1
    51 0000003A E8(00000000)                call printf
    52 0000003F 83C40C                      add esp, 12
    53                                  
    54 00000042 83C701                      add edi, 1
    55 00000045 83FF19                      cmp edi, array1_size
    56 00000048 7CE0                        jl print
    57                                  
    58                                  
    59 0000004A 89EC                        mov esp, ebp
    60 0000004C 5D                          pop ebp
    61                                  
    62 0000004D B800000000                  mov eax, 0
    63 00000052 C3                          ret
