     1                                  extern printf
     2                                  global main
     3                                  
     4                                  %define array1_size 30
     5                                  %define NULL 0
     6                                  %define NL 10
     7                                  %define EXIT_SUCCESS 0
     8                                  
     9                                  section .bss
    10                                  
    11                                  section .data
    12 00000000 00000000<rep 1Eh>           array1: times array1_size dd 0 
    13 00000078 00000000                    index_val dd 0
    14 0000007C 417272617920496E64-         fmt1: db "Array Index: %2d Value: %2d", NL, NULL
    14 00000085 65783A202532642056-
    14 0000008E 616C75653A20253264-
    14 00000097 0A00               
    15 00000099 4541583A202532640A-         fmt2: db "EAX: %2d", NL, NULL
    15 000000A2 00                 
    16                                      
    17                                  
    18                                  section .rodata
    19                                  
    20                                  section .text
    21                                  
    22                                  main:
    23 00000000 55                          push ebp
    24 00000001 89E5                        mov ebp, esp
    25                                  
    26 00000003 BB[00000000]                mov ebx, array1
    27 00000008 BF00000000                  mov edi, 0  
    28 0000000D B809000000                  mov eax, 9
    29                                  
    30                                      assign:
    31 00000012 8904BB                      mov [ebx+edi * 4], eax 
    32                                  
    33 00000015 83C701                      add edi, 1
    34 00000018 83C004                      add eax, 4
    35                                  
    36 0000001B 83FF1E                      cmp edi, array1_size
    37 0000001E 7EF2                        jle assign
    38                                  
    39 00000020 BF1D000000                  mov edi, 29
    40 00000025 BB[00000000]                mov ebx, array1
    41                                  
    42                                      print: 
    43 0000002A 8B04BB                      mov eax, [ebx+edi * 4]
    44                                  
    45 0000002D 50                          push dword eax
    46 0000002E 57                          push dword edi
    47                                  
    48 0000002F 68[7C000000]                push dword fmt1
    49 00000034 E8(00000000)                call printf
    50 00000039 83C40C                      add esp, 12
    51                                  
    52 0000003C 83EF01                      sub edi, 1
    53 0000003F 83FFFF                      cmp edi, -1
    54 00000042 7FE6                        jg print
    55                                  
    56                                  
    57 00000044 89EC                        mov esp, ebp
    58 00000046 5D                          pop ebp
    59                                  
    60 00000047 B800000000                  mov eax, 0
    61 0000004C C3                          ret
